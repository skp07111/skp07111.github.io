<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://skp07111.github.io/</id><title>skp07111's Blog</title><subtitle>developer, til, software, github</subtitle> <updated>2023-01-09T15:02:33+09:00</updated> <author> <name>skp</name> <uri>https://skp07111.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://skp07111.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://skp07111.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2023 skp </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>정렬</title><link href="https://skp07111.github.io/posts/%EC%A0%95%EB%A0%AC/" rel="alternate" type="text/html" title="정렬" /><published>2023-01-09T00:00:00+09:00</published> <updated>2023-01-09T00:00:00+09:00</updated> <id>https://skp07111.github.io/posts/%EC%A0%95%EB%A0%AC/</id> <content src="https://skp07111.github.io/posts/%EC%A0%95%EB%A0%AC/" /> <author> <name>skp</name> </author> <category term="Study" /> <category term="Coding Test" /> <summary> 선택 정렬: 매번 가장 작은 것을 선택 array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8] for i in range(len(array)): min_index = i # 가장 작은 원소의 인덱스 for j in range(i + 1, len(array)): if array[min_index] &amp;gt; array[j]: min_index = j array[i], array[min_index] = array[min_index], array[i] # 스와프 print(array) 삽입 정렬: 특정한 데이터를 적절한 위치에 삽입 array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8] for i in range... </summary> </entry> <entry><title>Chapter 01. 서론</title><link href="https://skp07111.github.io/posts/Chapter-01.-%EC%84%9C%EB%A1%A0/" rel="alternate" type="text/html" title="Chapter 01. 서론" /><published>2022-10-16T00:00:00+09:00</published> <updated>2022-10-16T04:29:50+09:00</updated> <id>https://skp07111.github.io/posts/Chapter-01.-%EC%84%9C%EB%A1%A0/</id> <content src="https://skp07111.github.io/posts/Chapter-01.-%EC%84%9C%EB%A1%A0/" /> <author> <name>skp</name> </author> <category term="Computer Science" /> <category term="Operating System" /> <summary> Chapter 01 서론 ■ 만약에 운영체제가 없다면? 전원을 켤 수는 있으나 그냥 깡통일 뿐 ⇒ 프로그램 실행 불가, 네트워크(인터넷) 접속 불가, 파일 저장/삭제 불가… ■ 컴퓨터 시스템의 구성요소: 하드웨어, 운영체제, 응용 프로그램, 사용자 ● 하드웨어(hardware) – 기본 계산용 자원을 제공 ex) 중앙 처리 장치(CPU), 메모리, 입출력 장치 ● 응용 프로그램(application programs) – 사용자의 계산 문제를 해결하기 위해 자원이 어떻게 사용될지를 정의 ex) 워드프로세서, 스프레드시트, 컴파일러, 웹브라우저 ● 운영체제(operating system) – 컴퓨터 사용자와 하드웨어 사이의 중개자 역할을 하는 소프트웨어 하드웨어, 소프트웨어 및 데이터로 ... </summary> </entry> <entry><title>Chapter 02. PHP 기초 문법</title><link href="https://skp07111.github.io/posts/Chapter-02.-PHP-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95/" rel="alternate" type="text/html" title="Chapter 02. PHP 기초 문법" /><published>2022-09-23T00:00:00+09:00</published> <updated>2022-09-25T23:57:47+09:00</updated> <id>https://skp07111.github.io/posts/Chapter-02.-PHP-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95/</id> <content src="https://skp07111.github.io/posts/Chapter-02.-PHP-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95/" /> <author> <name>skp</name> </author> <category term="Programming" /> <category term="PHP" /> <summary> Chapter 02 연습문제 풀이 1번. ② php에서 한 줄을 주석 처리하는데 사용되는 기호는 //이다. 2번. ① php에서 두 줄 이상을 주석 처리하는데 사용되는 기호는 /*, */이다. 3번. ② php 변수명에는 공백이 허용되지 않는다. 4번. &amp;lt;?php $name = "홍길동"; $phone = "010-1234-5678"; $address = "서울특별시 강남구"; $email = "hkd@abc.com"; echo "- 이름 : $name&amp;lt;br&amp;gt;"; echo "- 휴대폰 번호 : $phone&amp;lt;br&amp;gt;"; echo "- 주소 : $address&amp;lt;br&amp;gt;"; echo "- 이메일 : $email&amp;lt;br&amp;gt;"; ?&amp;gt; 5번. ... </summary> </entry> <entry><title>Chapter 01. PHP의 개요와 설치</title><link href="https://skp07111.github.io/posts/Chapter-01.-PHP%EC%9D%98-%EA%B0%9C%EC%9A%94%EC%99%80-%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="Chapter 01. PHP의 개요와 설치" /><published>2022-09-23T00:00:00+09:00</published> <updated>2022-09-23T01:46:43+09:00</updated> <id>https://skp07111.github.io/posts/Chapter-01.-PHP%EC%9D%98-%EA%B0%9C%EC%9A%94%EC%99%80-%EC%84%A4%EC%B9%98/</id> <content src="https://skp07111.github.io/posts/Chapter-01.-PHP%EC%9D%98-%EA%B0%9C%EC%9A%94%EC%99%80-%EC%84%A4%EC%B9%98/" /> <author> <name>skp</name> </author> <category term="Programming" /> <category term="PHP" /> <summary> 참고 PHP 프로그래밍 입문(3판), 황재호, 한빛아카데미 </summary> </entry> <entry><title>라즈베리파이 원격접속</title><link href="https://skp07111.github.io/posts/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%9B%90%EA%B2%A9%EC%A0%91%EC%86%8D/" rel="alternate" type="text/html" title="라즈베리파이 원격접속" /><published>2022-08-08T00:00:00+09:00</published> <updated>2022-09-23T01:10:51+09:00</updated> <id>https://skp07111.github.io/posts/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%9B%90%EA%B2%A9%EC%A0%91%EC%86%8D/</id> <content src="https://skp07111.github.io/posts/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%9B%90%EA%B2%A9%EC%A0%91%EC%86%8D/" /> <author> <name>skp</name> </author> <category term="Project" /> <category term="Raspberry Pi" /> <summary> (해당 글은 라즈베리파이4 Model B(4GB), PC는 Windows 기준으로 작성되었습니다.) 라즈베리파이의 원격 접속을 드디어 성공해서 감격하여 글을 써봅니다. 제 경우 라즈베리파이 로그인 오류로 인해 두 번 이상 포맷과 라즈베리파이 OS 재설치를 반복하였더니, 한번은 원격 데스크톱 연결을 이용한 원격 연결만 되고 또 한번은 VNC Viewer을 이용한 원격 연결만 되길래 그냥 두 가지 방법 모두 작성하였습니다. 원격 데스크톱 연결 터미널을 열고 아래 코드를 입력하여 Raspberry Pi Configuration을 엽니다. sudo raspi-config Raspberry Pi Configuration에서 3. Interface Options를 선택... </summary> </entry> </feed>
