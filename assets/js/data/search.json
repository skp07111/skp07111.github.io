[ { "title": "정렬", "url": "/posts/%EC%A0%95%EB%A0%AC/", "categories": "Study, Coding Test", "tags": "coding test, algorithm", "date": "2023-01-09 00:00:00 +0900", "snippet": "선택 정렬: 매번 가장 작은 것을 선택array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]for i in range(len(array)): min_index = i # 가장 작은 원소의 인덱스 for j in range(i + 1, len(array)): if array[min_index] &gt; array[j]: min_index = j array[i], array[min_index] = array[min_index], array[i] # 스와프print(array)삽입 정렬: 특정한 데이터를 적절한 위치에 삽입array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]for i in range(1, len(array)): for j in range(i, 0, -1): # 인덱스 i부터 1까지 1씩 감소하며 반복하는 문법 if array[j] &lt; array[j - 1]: # 한 칸씩 왼쪽으로 이동 array[j], array[j - 1] = array[j - 1], array[j] else: # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤 breakprint(array)퀵 정렬 기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꿈, 빠른 정렬 알고리즘array = [5, 7, 9, 0, 3, 1, 6, 2, 4, 8]def quick_sort(array, start, end): if start &gt;= end: # 원소가 1개인 경우 종료 return pivot = start # 피벗은 첫 번째 원소 left = start + 1 right = end while(left &lt;= right): # 피벗보다 큰 데이터를 찾을 때까지 반복 while(left &lt;= end and array[left] &lt;= array[pivot]): left += 1 # 피벗보다 작은 데이터를 찾을 때까지 반복 while(right &gt; start and array[right] &gt;= array[pivot]): right -= 1 if(left &gt; right): # 엇갈렸다면 작은 데이터와 피벗을 교체 array[right], array[pivot] = array[pivot], array[right] else: # 엇갈리지 않았다면 작은 데이터와 큰 데이터를 교체 array[left], array[right] = array[right], array[left] # 분할 이후 왼쪽 부분과 오른쪽 부분에서 각각 정렬 수행 quick_sort(array, start, right - 1) quick_sort(array, right + 1, end)quick_sort(array, 0, len(array) - 1)print(array)계수 정렬: 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘, 별도의 리스트를 선언하고 그 안에 정보를 담음# 모든 원소의 값이 0보다 크거나 같다고 가정array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]# 모든 범위를 포함하는 리스트 선언 (모든 값은 0으로 초기화)count = [0] * (max(array) + 1)for i in range(len(array)): count[array[i]] += 1 # 각 데이터에 해당하는 인덱스의 값 증가for i in range(len(count)): # 리스트에 기록된 정렬 정보 확인 for j in range(count[i]): print(i, end=' ') # 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력참고이것이 취업을 위한 코딩 테스트다 with 파이썬/나동빈/한빛미디어" }, { "title": "Chapter 01. 서론", "url": "/posts/Chapter-01.-%EC%84%9C%EB%A1%A0/", "categories": "Computer Science, Operating System", "tags": "CS, OS, operating system", "date": "2022-10-16 00:00:00 +0900", "snippet": "Chapter 01 서론■ 만약에 운영체제가 없다면? 전원을 켤 수는 있으나 그냥 깡통일 뿐\t⇒ 프로그램 실행 불가, 네트워크(인터넷) 접속 불가, 파일 저장/삭제 불가…■ 컴퓨터 시스템의 구성요소: 하드웨어, 운영체제, 응용 프로그램, 사용자● 하드웨어(hardware)– 기본 계산용 자원을 제공 ex) 중앙 처리 장치(CPU), 메모리, 입출력 장치● 응용 프로그램(application programs)– 사용자의 계산 문제를 해결하기 위해 자원이 어떻게 사용될지를 정의ex) 워드프로세서, 스프레드시트, 컴파일러, 웹브라우저● 운영체제(operating system)– 컴퓨터 사용자와 하드웨어 사이의 중개자 역할을 하는 소프트웨어 하드웨어, 소프트웨어 및 데이터로 구성된 컴퓨터 시스템이 동작할 때 이들 자원을 적절하게 사용할 수 있는 방법을 제공하며 컴퓨터가 실행되는 동안 항상 수행됨⇒ 마치 정부처럼 그 자체로는 유용한 기능을 수행하지 못하지만 다른 프로그램이 유용한 작업을 할 수 있는 환경 제공ex) Windows, macOS, Linux, iOS, Android● 사용자(users) 컴퓨터를 사용하는 사용자■ 사용자 관점(User View) → 편리성● PC 한 사용자가 자원을 독점하며 목표는 사용자가 수행하는 작업을 최대화하는 것 운영체제는 대부분 사용의 용이성을 위해 설계되고 성능에 약간 신경을 쓰지만 자원의 이용는 전혀 신경쓰지 않음● 대형 컴퓨터나 미니 컴퓨터에 연결된 터미널 사용자들이 동일한 컴퓨터를 다른 터미널에서 접근하고 있으므로 자원공유와 정보교환이 가능 운영체제는 자원 이용을 극대화하도록 설계되어있어 각 사용자는 자신의 정당한 몫만 사용가능● 워크스테이션과 서버의 네트워크에 연결된 워크스테이션 사용자들은 자신만의 전용 자원을 갖지만 네트워킹과 서버-파일, 계산 및 프린트 서버를 공유 운영체제는 개인의 사용 용이성과 자원 이용 간에 적절히 조화를 이루도록 설계됨● 휴대용 컴퓨터 개인 사용자들을 위한 독립형 장치로, 전화망이나 무선 기술을 통해 네트워크에 연결됨 운영체제는 사용의 용이성을 위해, 전력 소모를 최소화하도록 설계됨● 사용자 관점이 존재하지 않거나 매우 작은 경우 가전제품이나 자동차 내의 내장형 컴퓨터■ 시스템 관점(System View) → 효율성● 자원 할당자(resource allocator) 운영체제는 자원의 관리자로서 동작하며, 작업을 위해 특정 프로그램과 사용자에게 필요한 자원을 할당 운영체제는 컴퓨터 시스템을 효율적이고 공정하게 운영할 수 있도록 어느 요청에 자원을 할당할지 결정해야 함 (메인프레임이나 미니컴퓨터 예시처럼 동시에 접근하는 사용자들이 많은 경우 특히 중요)● 제어 프로그램(control program): 컴퓨터의 부적절한 사용을 방지하기 위해 사용자 프로그램의 수행을 제어. 특히 입출력 장치의 제어와 작동에 깊이 관여. 운영체제의 목표이자 정의 = 사용자에게 편리함 제공 + 하드웨어의 효율적인 사용 운영체제의 발전수작업 → 단일 프로그래밍 → 다중 프로그래밍 &amp; 시분할 시스템 → 모바일 운영체제 &amp; 실시간 시스템⇒ 운영체제가 유용한 컴퓨터 시스템을 만드는 과정에서 발생하는 문제점을 해결하기 위한 적절한 방법이기 때문에 운영체제가 존재하게 됨 컴퓨터가 발전함에 따라 다양한 운영체제가 등장하였으며, 오늘날 운영체제를 구성하는 기능의 수는 점점 증가하고 있음 휴대용 운영체제는 핵심 커널 외에 미들웨어(응용 개발자에게 추가 서비스를 제공하는 소프트웨어 프레임워크 집합)를 종종 포함ex) ios와 안드로이드는 핵심 커널과 더불어 DB, 멀티미디어 및 그래픽스를 제공 컴퓨터 시스템의 근본 목적인 사용자 프로그램의 실행과 보다 쉬운 사용자 문제 해결을 위해 컴퓨터 하드웨어가 제작됨↓ 순수 하드웨어만으로는 사용이 어려워 응용 프로그램이 개발됨 ↓ 다양한 응용 프로그램들이 입출력 장치의 통제와 같은 공통적인 연산을 필요로 하여 자원을 제어하고 할당하는 공통 기능을 하나의 소프트웨어로 통합한 것이 운영체제 입출력 장치 보호 ex) 한 프린터 작업이 끝나야 다음 프린터 작업이 가능 메모리 장치 보호 ex) 모든 프로그램의 시작 주소와 크기를 알아야 하며 요청 주소가 시작주소보다 크고 (시작주소+크기)보다 작은지 확인 CPU 장치 보호 ex) 시분할 시스템을 통해 특정 프로그램이 CPU를 점유하지 않도록 함■ 컴퓨터의 부팅 과정전원이 켜질 때 ROM에 저장된 부트스트랩 프로그램을 실행↓부트스트랩 프로그램은 메모리, CPU 레지스터 등을 초기화↓운영체제 커널을 메모리에 적재↓일부 서비스는 시스템 프로그램(커널X)에 의해 제공되며 이들은 부트 시 메모리에 적재되어 커널이 수행되는 동안 계속 수행되는 시스템 프로세스나 시스템 디먼이 됨↓이 단계가 끝나면 시스템이 완전히 부트된 상태이며 시스템은 어떤 이벤트가 발생하기를 기다림■ 부트스트랩 프로그램(=초기 프로그램): 컴퓨터가 구동을 시작하기 위해 필요한 단순한 프로그램 보통 펌웨어라고 알려져 있는 ROM이나 EEPROM에 저장됨 CPU 레지스터로부터, 장치 제어기, 메모리 내용 등을 포함한 시스템의 모든 면을 초기화 운영체제를 적재하는 방법 및 수행을 시작하는 방법을 알아야 하며 운영체제의 커널을 찾아 메모리에 적재해야 함■ 인터럽트 이벤트 발생 시 H/W나 S/W로부터 발생한 인터럽트에 의해 신호가 보내짐 하드웨어 인터럽트: 어느 순간이든 시스템 버스를 통해 CPU에 신호를 보내 인터럽트 발생 가능 ex) 기계검사 인터럽트, 외부 인터럽트, 입출력 인터럽트, 프로그램검사 인터럽트 소프트웨어 인터럽트: 시스템 콜이나 내부 인터럽트(ex) 0으로 나누기) 등을 통해 인터럽트 발생 가능인터럽트 발생↓ CPU가 하던 일 중단↓ 인터럽트 서비스 루틴이 위치한 시작 주소를 가진 고정된 위치로 실행을 옮김(여기서 고정된 위치는 인터럽트 벡터에 저장되어 있다)↓ 인터럽트 서비스 루틴 실행↓실행 종료 시 인터럽트 되었던 연산 재개■ 인터럽트가 요청되었을 때 처리하는 방법 인터럽트가 요청이 되면 인터럽트 서비스 루틴의 각 주소를 저장하고 있는 인터럽트 벡터 테이블 참조하여, 참조된 포인터가 가리키는 ISR(인터럽트 서비스 루틴)을 호출해서 인터럽트를 처리 만약 인터럽트 루틴이 처리기 상태를 변경할 필요가 있다면 인터럽트 루틴은 반드시 명시적으로 현재 상태를 저장해야 하며, 복귀하기 전에 상태를 복원해야 한다. 인터럽트를 서비스 한 후, 저장되어있던 복귀 주소를 PC(Program Counter)에 적재하고, 인터럽트에 의해 중단되었던 연산을 다시 실행■ 이중 모드(Dual mode) 사용자 모드와 커널 모드가 있으며 Mode bit의 값에 따라 시스템은 사용자 모드와 관리자 모드를 구분한다. STOP, HALT, EXIT 등의 일부 명령어는 특권 명령어로 지정되어 있어 커널 모드에서만 실행이 가능하다.■ 보호와 보안 보호: 각 프로세스가 프로세서를 점유하는 시간, 자료, 작업, 점유 장치 등을 대상으로 컴퓨터 시스템 내부의 자원 각각의 영역을 보장해주는 것 보안: 내부 혹은 외부에서의 공격에 대한 시스템의 방어로 시스템 내의 자료가 결함이 없도록 보존하고 신뢰성을 유지하는 기법■ 저장 장치 구조 프로세스: 실행 중인 프로그램이자 능동적인 개체를 의미한다. 명령어를 한 번이 하나씩 순차적으로 실행, 종료 시 재사용 가능한 모든 자원 반환한다. 주기억장치(RAM): 프로세스가 올라가는 공간. 프로세서(CPU)가 직접 접근할 수 있는 저장장치로서 워드(CPU가 한 번에 처리 가능한 단위)의 배열로 구성되며 전원이 공급되지 않으면 그 내용을 잃어버리는 휘발성 저장 장치 CPU는 명령어를 메모리에서 가져오므로 프로그램을 수행하려면 프로그램이 반드시 메모리에 있어야 한다. 범용 컴퓨터는 대부분의 프로그램을 RAM(Random-Access Memory)에서 가져온다. RAM은 DRAM(Dynamic Random-Access Memory)이라는 반도체 기술로 구현된다. ROM(Read Only Memory)은 변경이 불가능한 읽기 전용 메모리이므로 정적 프로그램을 저장한다. ex) 부트스트랩 프로그램, 게임 카트리지 EEPROM(Electrically Erasable Programmable Read Only Memory): 변경은 가능하나 자주 변경은 불가하여 주로 정적 프로그램을 저장한다. ex) 스마트폰의 공장에서 설치한 프로그램 보조기억장치: 프로그램과 자료들을 영구히 저장할 수 있는 저장 장치로서 HDD(자기 디스크의 일종)나 SSD(플래시 메모리의 일종) 등이 있다. 일반적으로 프로그램들은 보조기억장치에 저장되며 그 중 실행된 프로그램이 프로세스가 되어 주기억장치(RAM)에 적재되고, CPU가 이를 처리해 프로그램이 작동하게 됨 저장장치 시스템은 속도, 비용, 휘발성 여부에 따라 계층 구조를 형성한다 캐싱: 자주 사용하는 정보나 명령어를 복사하는 기법■ 일괄 처리 시스템 (Batch System): 초기의 운영체제는 데이터를 즉시 처리할 수 있는 여건을 갖추지 못했으므로 처리 속도를 향상시키기 위해서 일괄 처리 시스템을 운영체제에 도입하여 유사한 요구를 가지는 작업들을 함께 모아 이들을 하나의 그룹으로 수행 하드웨어의 급속한 발전으로 CPU와의 속도 차이가 크게 벌어지고 CPU가 쉬는 상태인 경우가 많아져 비효율적■ 다중 프로그래밍 시스템(Multi-Programming System): CPU가 수행할 작업을 항상 가지도록 하는 방식 HDD나 SSD에서 여러 개의 프로그램을 선택해서 메인 메모리에 적재하고(프로그램을 실행하여 프로세스에 올리고) 메모리 내에 있는 작업 중에서 하나를 선택해 차례대로 실행 이 때 수행중인 작업이 입출력 등으로 기다리는 상태에 도달하면 CPU는 다른 작업으로 넘어가서 수행을 계속해서 하게 됨 이후에 첫 번째 작업이 끝나면 현재의 작업을 중단하고 다시 첫 번째 작업이 CPU를 차지하게 되는 방식 모든 프로그램이 전부 다 쉬는 상태가 아닌 이상 메인 메모리(RAM)에 프로그램이 올라와 있다면 CPU는 계속해서 쉬지 않고 일을 하게 됨■ 시분할 시스템: 프로그램이 수행되고 있을 때 짧은 주기로 CPU를 각각의 프로그램에 할당을 해주는 방법 ex) 리눅스(Linux) – 여러 명의 사용자가 동시에 한 대의 컴퓨터에 접속해서 각자 작업이 가능 시분할 시스템으로 사용자는 프로그램이 수행되고 있는 동안에도 상호작용을 할 수 있게 됨 우리가 느끼지 못하는 아주 짧은 주기로 전환이 이루어지기 때문에 사용자는 프로그램이 동시에 작동하고 있다고 느끼게 되지만 CPU는 한 순간에 하나의 일만 처리 가능 작업 스케줄링 : 보조기억장치에 프로그램이 저장되어 있고 그 중 일부를 선택해서 메모리에 적재하는 전략 CPU 스케줄링 : 메모리에 올라온 작업들 중에서 무엇부터 실행할지 고르는 전략 일괄 처리 시스템 : 상호작용이 필요 없는 큰 단위의 작업을 수행할 때 사용됨■ 다중 처리 시스템(Multiprocessor System): CPU가 여러 개인 시스템을 의미하며 각각의 CPU들이 밀접하게 통신을 하는 구조 [장점] 증가된 처리량: CPU가 하나일 때보다 성능 향상 규모의 경제: 여러 대의 컴퓨터를 사용하는 것보다 비용 절감 증가된 신뢰성: 하나의 처리기가 고장나더라도 시스템이 정상적으로 작동.● 대칭적 다중 처리 시스템 : 각 CPU가 하나의 운영체제 하에서 작동하며 CPU끼리 서로 동등한 위치에서 데이터를 효율적으로 공유하는 구조 → 각 처리기는 공통적인 임무를 수행● 비대칭적 다중 처리 시스템: 각 처리기마다 특정한 작업이 정해져 있고 하나의 주요 CPU가 시스템을 제어하며 다른 CPU들은 미리 정의 된 작업 혹은 명령을 수행 → 각 처리기는 특별한 임무를 수행■ 분산 처리 시스템(Distributed Processing System): 네트워크를 이용해 동시에 작업을 처리하는 시스템으로 각 CPU들은 메모리를 공유하지는 않음 ex) 클라이언트-서버 시스템 [장점] 적절한 자원 공유로 계산 속도 증가 한두개의 장치가 고장나더라도 시스템은 작동하므로 신뢰성 증가■ 클러스터 시스템(Clustered System): 많은 CPU를 물리적으로 한 곳에 모아서 특정한 작업을 수행하는 시스템 ex) 기상청 컴퓨터 LAN으로 서로 연결된 각각의 CPU는 다른 CPU와 상호작용하여 고속 처리 서비스를 지원 보통 SAN(storage-area network)을 통하여 저장장치를 공유● 대칭적 클러스터 시스템(Asymmetric clustering): 각각의 CPU가 호스트가 되어 동등한 위치에서 서로를 관리하는 구조로 둘 이상의 작업을 수행할 수 있음● 비대칭적 클러스터 시스템(Symmetric clustering): 호스트 CPU가 다른 CPU를 관리하면서 특정 CPU가 작동을 중지하면 호스트 CPU가 작업을 돕거나 다른 CPU를 이용해 작업을 지시하는 구조■ 실시간 시스템(Real-Time System): CPU의 동작이나 작업이 즉시적인 처리를 필요로 할 때 채택되는 시스템● 연성 실시간 시스템(Soft Real-Time System): 시간을 중요시하되 유연함을 가진 시스템 일반 컴퓨터에도 많이 녹아 있음ex) 음악, 동영상 스트리밍● 경성 실시간 시스템(Hard Real-Time System): 빠른 시간이 절대적으로 요구되는 시스템으로 단기 메모리만 써서 시간 엄수를 최우선으로 함ex) 미사일 발사 시스템, 원전 시스템참고Operating System Concepts 에센셜/Abraham Silberschatz , Peter Baer Galvin , Greg Gagne/교보문고" }, { "title": "Chapter 02. PHP 기초 문법", "url": "/posts/Chapter-02.-PHP-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95/", "categories": "Programming, PHP", "tags": "programming, language, php", "date": "2022-09-23 00:00:00 +0900", "snippet": "Chapter 02 연습문제 풀이1번. ②php에서 한 줄을 주석 처리하는데 사용되는 기호는 //이다.2번. ①php에서 두 줄 이상을 주석 처리하는데 사용되는 기호는 /*, */이다.3번. ②php 변수명에는 공백이 허용되지 않는다.4번.&lt;?php\t$name = \"홍길동\";\t$phone = \"010-1234-5678\";\t$address = \"서울특별시 강남구\";\t$email = \"hkd@abc.com\";\techo \"- 이름 : $name&lt;br&gt;\";\techo \"- 휴대폰 번호 : $phone&lt;br&gt;\";\techo \"- 주소 : $address&lt;br&gt;\";\techo \"- 이메일 : $email&lt;br&gt;\";?&gt;5번.&lt;?php\t$name = \"홍길동\";\t$phone = \"010-1234-5678\";\t$address = \"서울특별시 강남구\";\t$email = \"hkd@abc.com\";?&gt;&lt;html&gt;\t&lt;style&gt;\t\ttable {\t\t width: 100%;\t\t border: 1px solid #444444;\t\t border-collapse: collapse;\t\t}\t\tth, td {\t\t border: 1px solid #444444;\t\t}\t&lt;/style&gt;\t&lt;table&gt;\t\t&lt;thead&gt;\t\t\t&lt;tr&gt;\t\t\t\t&lt;td&gt;이름&lt;/td&gt;\t\t\t\t&lt;td&gt;휴대폰 번호&lt;/td&gt;\t\t\t\t&lt;td&gt;주소&lt;/td&gt;\t\t\t\t&lt;td&gt;이메일&lt;/td&gt;\t\t\t&lt;/tr&gt;\t\t&lt;/thead&gt;\t\t&lt;tr&gt;\t\t\t&lt;td&gt; &lt;?php echo $name?&gt; &lt;/td&gt;\t\t\t&lt;td&gt; &lt;?php echo $phone?&gt; &lt;/td&gt;\t\t\t&lt;td&gt; &lt;?php echo $address?&gt; &lt;/td&gt;\t\t\t&lt;td&gt; &lt;?php echo $email?&gt; &lt;/td&gt;\t\t&lt;/tr&gt;\t&lt;/table&gt;&lt;/html&gt;6번. ①php의 이스케이프 문자 중 줄 바꿈을 의미하는 것은 \\n이다.7번. ①&#60;?php echo $name?&#62;의 약식 표현은 &#60;?=$name?&#62;이다.8번. ④하나 또는 여러 개의 문자로 구성된 데이터형은 문자열이다.9번. ①3을 10으로 나눈 나머지는 3이다.10번. ③문자열 연결에 사용되는 연산자는 . 이다.11번. ①“3479.0”는 소수점 이하 자릿수가 포함된 수로 실수이다. 따라서 데이터형은 실수형이다.12번. ③&amp;&amp; 연산자는 두 조건이 모두 참이어야만 그 결과가 참이다.13번.&lt;?php\t$child_fee = 5000; \t// 청소년 입장료 5,000원\t$adult_fee = 8000; \t// 성인 입장료 8,000원\t$num_child = 3; \t// 청소년 3매\t$num_adult = 2; \t// 성인 2매\t$total_fee = $child_fee * $num_child + $adult_fee * $num_adult;\techo \"전체 입장료 : $total_fee 원\";?&gt;14번.&lt;?php\t$money = 3000; \t// 지불액\t$price = 800; \t// 물건 가격\t$num = 3; \t\t// 구매 개수\t$change = $money - $price * $num;\techo (\"물건 가격 : $price &lt;br&gt;\");\techo (\"구매 개수 : $num &lt;br&gt;\");\techo (\"지불액 : $money &lt;br&gt;\");\techo (\"거스름돈은 $change 원 입니다.&lt;br&gt;\");?&gt;15번.&lt;?php\t$num1 = \"991111\";\t$num2 = \"1010111\";\t$id = $num1.\"-\".$num2;\techo \"주민등록번호 : $id\".\"&lt;br&gt;\";\t$email1 = \"master\";\t$email2 = \"codingschool.info\";\t$email = $email1.\"@\".$email2;\techo \"이메일 주소 : $email\";?&gt;16번. a : 10, b : 100, c : 0&lt;?php\t$a = 3;\t$b = 2; \t$a = $a + $b; // a는 5 \t$b = $a + 5; // b는 10 \t$c = $a * $b; // c는 50 \t$c = $c % 2; // c는 0 \t$a = $b + $c; // a는 10 \t$b = $a * $b; // b는 100 \techo \"a : $a, b : $b, c : $c\"; // a : 10, b : 100, c : 0?&gt;참고PHP 프로그래밍 입문(3판)/황재호/한빛아카데미" }, { "title": "Chapter 01. PHP의 개요와 설치", "url": "/posts/Chapter-01.-PHP%EC%9D%98-%EA%B0%9C%EC%9A%94%EC%99%80-%EC%84%A4%EC%B9%98/", "categories": "Programming, PHP", "tags": "programming, language, php", "date": "2022-09-23 00:00:00 +0900", "snippet": "참고PHP 프로그래밍 입문(3판), 황재호, 한빛아카데미" }, { "title": "라즈베리파이 원격접속", "url": "/posts/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%9B%90%EA%B2%A9%EC%A0%91%EC%86%8D/", "categories": "Project, Raspberry Pi", "tags": "project, remote desktop, vnc, raspberry pi", "date": "2022-08-08 00:00:00 +0900", "snippet": "(해당 글은 라즈베리파이4 Model B(4GB), PC는 Windows 기준으로 작성되었습니다.)라즈베리파이의 원격 접속을 드디어 성공해서 감격하여 글을 써봅니다.제 경우 라즈베리파이 로그인 오류로 인해 두 번 이상 포맷과 라즈베리파이 OS 재설치를 반복하였더니, 한번은 원격 데스크톱 연결을 이용한 원격 연결만 되고 또 한번은 VNC Viewer을 이용한 원격 연결만 되길래 그냥 두 가지 방법 모두 작성하였습니다.원격 데스크톱 연결 터미널을 열고 아래 코드를 입력하여 Raspberry Pi Configuration을 엽니다. sudo raspi-config Raspberry Pi Configuration에서 3. Interface Options를 선택하여 I2. SSH를 enabled로 변경합니다.그리고 Back하여 Raspberry Pi Configuration 첫 화면으로 돌아와 1. System Options에서 S5. Boot / Auto Login을 선택하여 B3. Desktop으로 설정을 변경합니다.(GUI 화면에서 진행하셔도 됩니다.) 혹시 업데이트와 업그레이드를 하지 않았다면 진행해줍니다. sudo apt-get updatesudo apt-get upgrade 윈도우 PC의 원격 접속을 위해 xrdp를 설치합니다. sudo apt-get install xrdp 여기까지 진행해도 원격 접속이 되지 않는다면, 아래 코드를 입력합니다. sudo gpasswd -d pi videosudo gpasswd -d pi render 윈도우 PC에서 원격 데스크톱 연결이라는 프로그램을 켜고 라즈베리파이의 ip주소를 입력한 뒤 연결을 누릅니다.이때 로그인 창이 뜨면 라즈베리파이 아이디와 비밀번호를 입력하여 로그인합니다.(라즈베리파이의 ip주소는 오른쪽 상단의 Wireless LAN 아이콘에 커서를 올려놓으면 확인할 수 있습니다.)VNC Viewer 터미널을 열고 아래 코드를 입력하여 Raspberry Pi Configuration을 엽니다. sudo raspi-config Raspberry Pi Configuration에서 3. Interface Options를 선택하여 I3. VNC를 enabled로 변경합니다.그리고 Back하여 Raspberry Pi Configuration 첫 화면으로 돌아와 1. System Options에서 S5. Boot / Auto Login을 선택하여 B3. Desktop으로 설정을 변경합니다.(GUI 화면에서 진행하셔도 됩니다.) 혹시 업데이트와 업그레이드를 하지 않았다면 진행해줍니다. sudo apt-get updatesudo apt-get upgrade 이곳에서 본인의 PC에 맞는 VNC Viewer 프로그램을 다운받습니다. VNC Viewer 프로그램을 켜고 상단의 주소창에 라즈베리파이의 ip주소를 입력한 뒤 엔터 키를 칩니다.이때 로그인 창이 뜨면 라즈베리파이 아이디와 비밀번호를 입력하고 OK 버튼을 눌러 로그인합니다.(라즈베리파이의 ip주소는 오른쪽 상단의 Wireless LAN 아이콘에 커서를 올려놓으면 확인할 수 있습니다.)참고https://raspberrypi.stackexchange.com/questions/133425/connection-problem-giving-up-on-xrdp-with-raspberry-pi-os-11-bullseye%EF%BB%BFhttps://n2infotech.co.kr/120" }, { "title": "라즈베리파이 시작하기", "url": "/posts/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/", "categories": "Project, Raspberry Pi", "tags": "project, install, raspberry pi", "date": "2022-08-07 00:00:00 +0900", "snippet": "(해당 글은 라즈베리파이4 Model B(4GB), PC는 Windows 기준으로 작성되었습니다.)스마트 해상물류 프로젝트 진행 중 사용하게 된 라즈베리파이의 설치 및 실행방법을 정리해보았습니다.저는 인프런 강의 중 [라즈베리파이] IoT 딥러닝 Computer Vision 실전 프로젝트 라는 강의를 구매하여 수강하였는데, 강의가 리뉴얼이 되지 않아 구글링과 유튜브 검색을 통해 최신 버전에 맞는 설치 방법을 찾는 과정에서 꽤나 애를 먹었습니다… 일단 제가 찾은 방법은 다음과 같습니다. 준비물PC(데스크탑 또는 노트북), 라즈베리파이4B(보드), Micro SD카드, Micro SD카드 리더기, micro HDMI to HDMI 케이블, 모니터(HDMI 연결 가능한 것), 유선 키보드, 유선 마우스, C타입 충전기1. Micro SD카드 포맷1) Micro SD카드를 Micro SD카드 리더기에 꼽고 본인의 PC와 연결합니다.2) 해당 장치 위에 커서를 두고 마우스 오른쪽 버튼을 눌러 아래 사진과 같이 포맷을 선택합니다.3) 시작을 눌러 포맷을 진행하고 완료되면 닫기를 누릅니다.2. Rasberry Pi Imager 다운로드1) https://www.raspberrypi.com/software/로 이동하여 자신의 PC에 맞는 Rasberry Pi Imager를 다운로드 해줍니다. 저는 윈도우를 사용하므로 Download for Widnows를 선택하였습니다.2) 다운받은 Rasberry Pi Imager를 실행하여 운영체제는 삭제, 저장소는 1.에서 포맷한 SD카드를 선택한 뒤 쓰기 버튼을 눌러줍니다.3) 쓰기가 완료되면 다시 운영체제에서 Rasberry Pi OS (other) 의 Rasberry Pi OS Full(32-bit) 를 선택한 뒤 쓰기 버튼을 눌러줍니다. 그리고 인내심을 가지고 기다립니다. 4) 쓰기가 완료되면 PC에서 SD카드의 연결을 해제한 후 SD카드를 라즈베리파이의 뒷면에 꽂아줍니다.3. 라즈베리파이 초기 설정1) 라즈베리파이에 C타입 충전기를 연결하여 전원을 켜고, 라즈베리파이와 유선 마우스, 유선 키보드, 모니터를 연결해줍니다. 이때 모니터는 당연히 HDMI 케이블로 연결해줍니다.2) 그러면 모니터에 아래와 같은 화면이 뜹니다.3) Wireless LAN 아이콘을 눌러 country를 설정해줍니다. 저는 한국으로 설정해도 연결이 잘 되었는데 혹시 연결이 안되시는 분은 US로 설정하시면 될 것 같습니다.4) 본인이 사용하는 와이파이를 연결하면 이렇게 아이콘이 바뀝니다.5) 그 외 초기설정은 이곳을 참고하였습니다." } ]
